!function(factory){if("object"==typeof module&&"object"==typeof module.exports){var v=factory(require,exports);void 0!==v&&(module.exports=v)}else"function"==typeof define&&define.amd&&define(["require","exports"],factory)}(function(require,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Injection=function(){function Injection(nameOfDependency){this.nameOfDependency=nameOfDependency||"$inject",this.functions={},this.instances={}}return Injection.prototype.set=function(name,func){if(null===func&&(func=void 0),"function"!=typeof func&&void 0!==func)throw new Error("Provided func argument is not a function.");return this.functions[name]=func,this},Injection.prototype.get=function(name){return this.instances[name]},Injection.prototype.build=function(){var _this=this,instances={},waiters={},buildService=function(name,requiredByAka){var service=instances[name];if(service)return service;var func=_this.functions[name];if("function"!=typeof func)throw new Error('Entry "'+name+'" required by '+requiredByAka+" is not defined.");var args=[],$inject=func[_this.nameOfDependency];if($inject){if(!($inject instanceof Array))throw new Error(_this.nameOfDependency+' property of entry "'+name+'" ('+func.name+") must be an array of strings.");waiters[name]=!0,$inject.forEach(function(n){if(waiters[n])throw new Error("Circular dependency of "+Object.keys(waiters).map(function(name){return'"'+name+'" ('+_this.functions[name].name+")"}).join(", ")+".");args.push(buildService(n,'"'+name+'" ('+func.name+")"))}),delete waiters[name]}return service=instances[name]=new(Function.prototype.bind.apply(func,[null].concat(args)))};Object.keys(this.functions).forEach(function(name){buildService(name)}),this.instances=instances},Injection}();exports.default=Injection});